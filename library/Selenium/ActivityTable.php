<?php

/* originally from Icinga Web 2 X.509 Module | (c) 2018 Icinga GmbH | GPLv2 */
/* generated by icingaweb2-module-scaffoldbuilder | GPLv2+ */

namespace Icinga\Module\Selenium;

use Icinga\Authentication\Auth;
use Icinga\Module\Selenium\Model\Activity;
use Icinga\Web\Url;
use ipl\Html\Html;
use ipl\Orm\Model;


/**
 * Table widget to display a list of Testruns
 */
class ActivityTable extends DataTable
{
    protected $defaultAttributes = [
        'class'            => 'common-table table-row-selectable',
        'data-base-target' => '_next'
    ];

    public function createColumns()
    {
        $columns =[];
        foreach ((new Activity())->getColumnDefinitions() as $column => $options){
            if(is_array($options)) {
                $fieldtype = $options['fieldtype'] ?? "text";

                unset($options['fieldtype']);

                if ($column === "user"){
                    $columns[$column."_txt"] = [
                        'label'  => "",
                        'column' => function ($data) {
                            $url="";
                            if (Auth::getInstance()->hasPermission('selenium/activity/restore')) {
                                $url = Url::fromPath('selenium/activity/view', ['id' => $data->id]);
                            }

                            $translate = [
                                'delete'=>t('deleted'),
                                'create'=>t('created'),
                                'update'=>t('updated'),
                            ];


                            $text = sprintf("[%s] %s %s %s",$data->user,$translate[$data->action],$data->model,$data->getOtherModel()->name);
                            return Html::tag('a',['href'=>$url],$text);
                        }
                    ];
                }

                if ($column === "ctime"){
                    $columns[$column."_txt"] = [
                        'label'  => "",
                        'column' => function ($data) {
                            if($data->ctime!=null){
                                return $data->ctime->format("c");
                            }
                            return t("not set");
                        }
                    ];
                }

            }
        }

        return $columns;
    }


    protected function renderRow(Model $row)
    {
        $tr = parent::renderRow($row);



        return $tr;
    }
}
